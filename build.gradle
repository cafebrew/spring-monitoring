plugins {
  id "org.springframework.boot" version "2.1.4.RELEASE"
  id "com.google.cloud.tools.jib" version "1.1.2"
  id "org.flywaydb.flyway" version "5.2.4"
  id "groovy"
  id "java"
}

ext {
  groovyVersion = "2.5.6"
  mysqlVersion = "8.0.13"
  flywaydbVersion = "5.2.4"
  micrometerVersion = "1.1.4"
  spockVersion = "1.3-groovy-2.5"

  dockerBaseImage = "amazoncorretto:11"
  dockerImageName = "cloudbuild/${project.name}"
}

ext["groovy.version"] = groovyVersion

apply plugin: 'io.spring.dependency-management'

sourceCompatibility = '11'
version = '1.0.0'

repositories {
  mavenCentral()
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

jib {
  from.image = "${dockerBaseImage}"
  to {
    image = "${dockerImageName}"
    tags = ["${project.version}".toString(), "latest"]
    credHelper = "osxkeychain"
  }
  container {
    jvmFlags = ['-Djava.security.egd=file:/dev/./urandom']
    mainClass = 'spring.monitoring.Application'
    ports = ['8080']
  }
}

configurations {
  compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-undertow'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  testImplementation "org.springframework.boot:spring-boot-starter-test"

  testImplementation "org.springframework.security:spring-security-test"

  testImplementation "org.spockframework:spock-core:${spockVersion}"
  testImplementation "org.spockframework:spock-spring:${spockVersion}"

  implementation "mysql:mysql-connector-java:${mysqlVersion}"
  implementation "org.flywaydb:flyway-core:${flywaydbVersion}"
  implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"

  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"
}
